@startuml Personalized Recommendation Sequence Diagram

' Styling
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 150
skinparam sequenceParticipant underline

' Actors and Participants
actor "User\n(accountId=123)" as User
participant "Frontend\n(React)" as Frontend
participant "RoomController" as Controller
participant "RoomServiceImpl" as Service
participant "BookingRepository" as BookingRepo
participant "RoomRepository" as RoomRepo

' Sequence Flow
User -> Frontend: 1. Visit Homepage (Logged In)
activate Frontend

Frontend -> Frontend: 2. Get accountId from localStorage

Frontend -> Controller: 3. GET /api/rooms/recommend\n?accountId=123&type=personalized
activate Controller

Controller -> Controller: 4. Create RoomRecommendRequest\n(123, "personalized", 5)

Controller -> Service: 5. recommendRooms(request)
activate Service

Service -> BookingRepo: 6. findUserPreferredRoomTypes(123)
activate BookingRepo
BookingRepo --> Service: 7. List<[bedLayoutId, count]>
deactivate BookingRepo

alt user has booking history
    Service -> Service: 8. Extract most preferred\nbedLayoutId
    
    Service -> RoomRepo: 9. findForList(status='available')
    activate RoomRepo
    RoomRepo --> Service: 10. List<RoomEntity>
    deactivate RoomRepo
    
    Service -> Service: 11. Filter by bedLayoutId\n& isVisible=true
    Service -> Service: 12. Sort by price ASC
else user has no history
    Service -> Service: 13. Return empty list
    note right
        Auto fallback will
        cascade to "popular"
    end note
end

Service -> Service: 14. Limit to 5 rooms
Service -> Service: 15. Map to Room DTOs

Service --> Controller: 16. List<Room>
deactivate Service

Controller --> Frontend: 17. JSON Response (200 OK)
deactivate Controller

Frontend -> Frontend: 18. Display in Carousel

Frontend --> User: 19. Show Personalized Rooms
deactivate Frontend

@enduml

