@startuml room_detail_sequence

skinparam sequenceArrowThickness 2
skinparam roundcorner 10
skinparam maxmessagesize 150

actor User as U
participant "Frontend\n(React)" as FE
participant "RoomController" as RC
participant "RoomServiceImpl" as RS
participant "RoomRepository" as RR
participant "ReviewRepository" as RevR
database "Database" as DB

title Sequence Diagram: View Room Detail (QLKS-4)

== User Navigation ==
U -> FE: Click "Xem chi tiết" on room card
activate FE
FE -> FE: Navigate to /rooms/{id}
FE -> FE: Extract room ID from URL

== API Request ==
FE -> RC: GET /api/rooms/{id}
activate RC
note right: Public endpoint\n(no auth required)

== Room Data Retrieval ==
RC -> RS: getRoomDetail(id)
activate RS

RS -> RR: findById(id)
activate RR
RR -> DB: SELECT * FROM rooms\nLEFT JOIN bed_layouts\nWHERE room_id = ?
activate DB
DB --> RR: RoomEntity with BedLayout
deactivate DB

alt Room Not Found
    RR --> RS: Optional.empty()
    RS --> RC: throw RuntimeException\n"Không tìm thấy phòng"
    RC --> FE: HTTP 404 Not Found\n{"message": "Không tìm thấy phòng"}
    FE --> U: Display error message
else Room Found
    RR --> RS: Optional<RoomEntity>
    deactivate RR
    
    == Review & Rating Retrieval ==
    RS -> RevR: findByRoomIdWithAccount(roomId)
    activate RevR
    
    RevR -> DB: SELECT reviews with JOIN\n(bookings, accounts)\nWHERE room_id = ?\nORDER BY created_at DESC\nLIMIT 10
    activate DB
    DB --> RevR: List<ReviewEntity>
    deactivate DB
    
    RevR -> DB: Calculate AVG rating\nand rating distribution
    activate DB
    DB --> RevR: avgRating, totalReviews,\nratingDistribution
    deactivate DB
    
    RevR --> RS: Review data
    deactivate RevR
    
    == Data Mapping ==
    RS -> RS: Map RoomEntity to RoomDetail DTO
    note right
        **Mapping includes:**
        • Basic info (id, number, name, price)
        • Images (main + gallery)
        • Description & highlights
        • Amenities (grouped by category)
        • Rating stats (avg, total, distribution)
        • Recent 10 reviews with reviewer info
    end note
    
    RS --> RC: RoomDetail DTO
    deactivate RS
    
    == API Response ==
    RC --> FE: HTTP 200 OK\n+ RoomDetail JSON
    deactivate RC
    
    == UI Rendering ==
    FE -> FE: Render room detail page:
    note right
        **UI Components:**
        • Image carousel/gallery
        • Room info card (name, price, capacity, type)
        • Description section
        • Highlights badges
        • Amenities grid (grouped by category)
        • Rating histogram (5★, 4★, 3★, 2★, 1★)
        • Review list with reviewer info
    end note
    
    FE --> U: Display complete room detail page
    deactivate FE
end

@enduml

