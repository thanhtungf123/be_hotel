@startuml room_detail_class_diagram

skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor LightYellow
    BorderColor Black
    ArrowColor Black
}

' ===== DTOs =====
class RoomDetail {
    - id: Long
    - roomNumber: String
    - name: String
    - type: String
    - priceVnd: Integer
    - capacity: Integer
    - imageUrl: String
    - images: List<String>
    - description: String
    - highlights: List<String>
    - amenities: List<String>
    - avgRating: Double
    - totalReviews: Integer
    - ratingDistribution: Map<Integer, Integer>
    - reviews: List<ReviewDto>
    --
    + getters/setters
}

' ===== Controller =====
class RoomController {
    - roomService: RoomService
    --
    + getRoomDetail(id: Long): ResponseEntity<RoomDetail>
}

' ===== Service Interface =====
interface RoomService {
    + getRoomDetail(id: Long): RoomDetail
}

' ===== Service Implementation =====
class RoomServiceImpl {
    - roomRepository: RoomRepository
    - reviewRepository: ReviewRepository
    --
    + getRoomDetail(id: Long): RoomDetail
}

' ===== Repositories =====
interface RoomRepository {
    + findById(id: Long): Optional<RoomEntity>
}

interface ReviewRepository {
    + findByRoomIdWithAccount(roomId: Integer): List<ReviewEntity>
}

' ===== Entity =====
class RoomEntity {
    - id: Integer
    - roomNumber: String
    - roomName: String
    - pricePerNight: Integer
    - capacity: Integer
    - description: String
    - amenities: String
    - imageUrl: String
    - status: String
    - isVisible: Boolean
    - bedLayout: BedLayout
    --
    + getters/setters
}

class ReviewEntity {
    - id: Integer
    - rating: Integer
    - comment: String
    - createdAt: LocalDateTime
    - booking: Booking
    --
    + getters/setters
}

' ===== Relationships =====
RoomController ..> RoomService : uses
RoomController ..> RoomDetail : returns

RoomService <|.. RoomServiceImpl : implements

RoomServiceImpl ..> RoomRepository : uses
RoomServiceImpl ..> ReviewRepository : uses
RoomServiceImpl ..> RoomDetail : creates

RoomRepository ..> RoomEntity : queries

ReviewRepository ..> ReviewEntity : queries

note right of RoomDetail
  **Complete DTO with:**
  • Basic room info
  • Image gallery
  • Amenities list
  • Rating statistics
  • Recent reviews
end note

note bottom of RoomServiceImpl
  **Processing:**
  1. Fetch room entity
  2. Fetch reviews & ratings
  3. Calculate statistics
  4. Map to RoomDetail DTO
end note

@enduml

